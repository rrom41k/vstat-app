// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using vstat_app.Storage.Bll.DbConfiguration;

#nullable disable

namespace vstat_app.Storage.Migrations.Migrations
{
    [DbContext(typeof(StorageDbContext))]
    [Migration("20230715083302_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("vstat_app.Storage.Contracts.Models.File", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("Id");

                    b.Property<string>("BucketId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("BucketId");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Extension");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("OwnerId");

                    b.Property<string>("StorageId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("StorageId");

                    b.HasKey("Id")
                        .HasName("files_pkey");

                    b.HasIndex("StorageId");

                    b.ToTable("Files", (string)null);
                });

            modelBuilder.Entity("vstat_app.Storage.Contracts.Models.Storage", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("Id");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("UserId");

                    b.HasKey("Id")
                        .HasName("storage_pkey");

                    b.ToTable("Storage", (string)null);
                });

            modelBuilder.Entity("vstat_app.Storage.Contracts.Models.File", b =>
                {
                    b.HasOne("vstat_app.Storage.Contracts.Models.Storage", "StorageNavigation")
                        .WithMany("Files")
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("files_id_storage_fkey");

                    b.Navigation("StorageNavigation");
                });

            modelBuilder.Entity("vstat_app.Storage.Contracts.Models.Storage", b =>
                {
                    b.Navigation("Files");
                });
#pragma warning restore 612, 618
        }
    }
}
