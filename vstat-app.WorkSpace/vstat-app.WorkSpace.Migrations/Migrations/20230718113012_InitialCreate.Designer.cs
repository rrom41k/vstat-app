// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using vstat_app.WorkSpace.Bll.DbConfiguration;

#nullable disable

namespace vstat_app.WorkSpace.Migrations.Migrations
{
    [DbContext(typeof(WorkSpaceDbContext))]
    [Migration("20230718113012_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("vstat_app.WorkSpace.Contracts.Models.WorkSpace", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("Id");

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("OwnerId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Title");

                    b.HasKey("Id")
                        .HasName("workspace_pkey");

                    b.ToTable("WorkSpace", (string)null);
                });

            modelBuilder.Entity("vstat_app.WorkSpace.Contracts.Models.WorkSpaceFile", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("Id");

                    b.Property<string>("StorageId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("StorageId");

                    b.Property<string>("WorkSpaceId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("WorkSpaceId");

                    b.HasKey("Id")
                        .HasName("workspacefile_pkey");

                    b.HasIndex("WorkSpaceId");

                    b.ToTable("WorkSpaceFile", (string)null);
                });

            modelBuilder.Entity("vstat_app.WorkSpace.Contracts.Models.WorkSpaceFile", b =>
                {
                    b.HasOne("vstat_app.WorkSpace.Contracts.Models.WorkSpace", "WorkSpace")
                        .WithMany("WorkSpaceFiles")
                        .HasForeignKey("WorkSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("files_id_workspace_fkey");

                    b.Navigation("WorkSpace");
                });

            modelBuilder.Entity("vstat_app.WorkSpace.Contracts.Models.WorkSpace", b =>
                {
                    b.Navigation("WorkSpaceFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
